// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
// the sum of the even-valued terms.

extern crate type_printer;

pub fn result() {
    println!("\nProblem #2 coming soon!\n");

    let mut index = 1;
    let mut fibs = vec![];

    loop {
      let fib_seq = fib(index);
      if fib_seq  > 4000000 { break }
      if fib_seq % 2 == 0 { fibs.push(fib_seq) }
      index += 1
    }

    let mut sum = 0;

    for p in fibs.iter() {
      sum += *p;
    }

    println!("Answer: {}", sum);
}

fn fib(n: i32) -> i32{
  match n {
    0 => 0,
    1 => 1,
    _ => fib(n-1) + fib(n-2),
  }
}
